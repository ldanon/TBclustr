// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_clusterfunction
NumericVector rcpp_clusterfunction(NumericVector numc, NumericVector lnmean, NumericVector lnsd, NumericVector oprob, NumericVector clustersizes);
RcppExport SEXP _TBclustr_rcpp_clusterfunction(SEXP numcSEXP, SEXP lnmeanSEXP, SEXP lnsdSEXP, SEXP oprobSEXP, SEXP clustersizesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type numc(numcSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lnmean(lnmeanSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lnsd(lnsdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type oprob(oprobSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type clustersizes(clustersizesSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_clusterfunction(numc, lnmean, lnsd, oprob, clustersizes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TBclustr_rcpp_clusterfunction", (DL_FUNC) &_TBclustr_rcpp_clusterfunction, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_TBclustr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
